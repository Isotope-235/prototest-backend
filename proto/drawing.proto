syntax = "proto3";

package drawing;

// Define the Canvas message, which includes a two-dimensional array of signed integers.
// Since proto3 does not directly support 2D arrays, we'll use a repeated message
// that contains a repeated field.
message DrawingCanvas {
  // Represents a row in the canvas.
  message Row {
    repeated int32 cols = 1; // Each column in the row, containing signed integers.
  }
  repeated Row rows = 1; // The rows of the canvas.
}

// The empty message type.
//
// Protobuf requires that an RPC contains a message, so Unit exists to facilitate RPCs that take no parameters.
message Unit {}

// The Drawing service definition.
service Drawing {
  rpc UploadCanvas (DrawingCanvas) returns (Unit);

  rpc PullCanvas (Unit) returns (DrawingCanvas);

  rpc HealthCheck (HealthCheckRequest) returns (HealthCheckResponse);
}

// The request message for the HealthCheck method.
message HealthCheckRequest { }

// The response message for the HealthCheck method.
message HealthCheckResponse {
  string status = 1;
}
